name:  Image release

on:
  push:
    tags:
      - 'v**'

jobs:
  build:
    name: Create docker release and publish to ghcr
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: ./go.mod
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build  images and binary files
      run: make docker-build
    - name: Build and compress linux binaries
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ./linux/gwctl ./cmd/gwctl
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ./linux/cl-adm ./cmd/cl-adm
        tar -czvf clusterlink-amd64-linux.tar.gz ./linux
    - name: Build and compress macOS binaries
      run: |
        GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -o ./os/gwctl ./cmd/gwctl
        GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -o ./os/cl-adm ./cmd/cl-adm
        tar -czvf clusterlink-amd64-darwin.tar.gz ./os
    - name: Build and compress  Arm-based macOS binaries
      run: |
        GOOS=darwin GOARCH=arm64  CGO_ENABLED=0 go build -o ./osarm64/gwctl ./cmd/gwctl
        GOOS=darwin GOARCH=arm64  CGO_ENABLED=0 go build -o ./osarm64/cl-adm ./cmd/cl-adm
        tar -czvf clusterlink-arm64-darwin.tar.gz ./osarm64
  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
  Upload-files:
    name: Upload binaries files
    runs-on: ubuntu-latest
    steps:
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: clusterlink-*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
  # push_images:
  #   name: Create docker release and publish to ghcr
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build and push ClusterLink images
  #       run: make push-image IMAGE_VERSION=${{ github.ref_name }}